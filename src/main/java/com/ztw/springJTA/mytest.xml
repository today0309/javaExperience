<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
					    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
					    http://www.springframework.org/schema/tx 
					    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
					    http://www.springframework.org/schema/jee 
					    http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
					    http://www.springframework.org/schema/context 
					    http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">
	
	
	<!-- 配置第一个数据源 -->
	<bean id="mainDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
	    <property name="uniqueResourceName" value="db_main"/>
	    <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
	    <property name="xaProperties">
	        <props>
	            <prop key="url">${master.jdbc.url}</prop>
	            <prop key="user">${master.jdbc.username}</prop>
	            <prop key="password">${master.jdbc.password}</prop>
	        </props>
	    </property>
	    <property name="minPoolSize" value="10" />
	    <property name="maxPoolSize" value="100" />
	    <property name="borrowConnectionTimeout" value="30" />
	    <property name="testQuery" value="select 1" />
	    <property name="maintenanceInterval" value="60" />
	</bean>
	<!-- 配置第一个数据源 -->
	
	
	<!-- 配置第二个数据源 -->
	<bean id="slave01DataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="db_oracle"/>
		<property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
		<property name="xaProperties">
		  <props>
		    <prop key="url">${slave01.jdbc.url}</prop>    
            <prop key="user">${slave01.jdbc.username}</prop>    
            <prop key="password">${slave01.jdbc.password}</prop>
		  </props>
		</property>
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="100" />
		<property name="borrowConnectionTimeout" value="30" />
		<property name="testQuery" value="select 1" />
		<property name="maintenanceInterval" value="60" />
	</bean>
	<!-- 配置第二个数据源 -->
	
	
	<!-- 扫描mybatis Mapper.class 和 *-mapper.xml 文件-->
	<bean id="mainSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="mainDataSource"/>
	    <property name="mapperLocations" value="classpath:/com/ztw/springJTA/dao/master/*.xml"></property>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="sqlSessionFactoryBeanName" value="mainSqlSessionFactory"/>
	    <property name="basePackage" value="com.ztw.springJTA.dao.master" />
	</bean>
	
	<bean id="slave01SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="slave01DataSource" />
		<property name="mapperLocations" value="classpath:/com/ztw/springJTA/dao/slave01/*.xml"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="sqlSessionFactoryBeanName" value="slave01SqlSessionFactory"></property>
		<property name="basePackage" value="com.ztw.springJTA.dao.slave01" />
	</bean>
	<!-- 扫描mybatis Mapper.class 和 *-mapper.xml 文件-->
	
	
	<!-- 分布式事务 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
	    <property name="forceShutdown" value="true"/>
	</bean>
	
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
	    <property name="transactionTimeout" value="300"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
	    <property name="transactionManager" ref="atomikosTransactionManager"/>
	    <property name="userTransaction" ref="atomikosUserTransaction"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- 分布式事务 -->
	
	
</beans>